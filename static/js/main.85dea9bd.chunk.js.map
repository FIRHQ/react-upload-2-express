{"version":3,"sources":["../../node_modules/upload2express/UploadHelper.js","../../node_modules/upload2express/index.js","../../src/index.js","App.js","index.js"],"names":["ElementDisplay","element","is_show","style","display","uploadPanel","projectId","domain","imgElement","qrImgElement","qrcodeWidth","imgMaxWidth","imgMaxHeight","this","querySelector","document","createElement","className","cssText","appendChild","qrcodeBtn","linkBtn","userId","uid","fetchSecretPromise","mainAttribute","secondAttribute","updateFunction","url","console","log","promise","Promise","resolve","then","secret","onclick","e","preventDefault","src","buildQrUrl","bindImgLoad","pageUrl","buildUploadPageUrl","window","open","imageUrl","buildImageUrl","loadFunction","onerror","setTimeout","Date","getTime","onload","bindImg","uploadUid","uploadDomain","encodeURIComponent","children","showLink","panelClass","directLinkClass","defaultUploadedUrl","showDirectLink","qrCodeLinkClass","showQrCodeLink","RenderDom","showUploadedImg","uploadedImgStyle","buildUidFunc","updatedFunc","useRef","imagePanel","useState","uploadedUrl","setUploadUrl","visibleUploadedLink","setVisibleUploadedLink","uploadHelper","getUid","useEffect","ref","href","onClick","objectFit","maxidth","maxHeight","type","value","name","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.85dea9bd.chunk.js","sourcesContent":["import {buildUploadPageUrl, buildImageUrl, buildQrUrl} from './index';\n\nconst bindImg = (imgElement, imageUrl, loadFunction = (url) => {}) => {\n  imgElement.src = imageUrl\n  imgElement.onerror = () => {\n    ElementDisplay(imgElement, false)\n    setTimeout(() => {\n      imgElement.src = `${imageUrl}&t=${new Date().getTime()}`\n    }, 3000)\n  }\n  imgElement.onload = () => {\n    ElementDisplay(imgElement, true)\n    loadFunction(imageUrl)\n  }\n}\n\nconst ElementDisplay = (element, is_show) => {\n  if (element){\n    element.style.display = is_show ? '' : 'none'\n  }\n}\n\nclass UploadHelper {\n  constructor({uploadPanel, projectId, domain = 'uploadhelper.ce04.com', imgElement = null, qrImgElement = null, qrcodeWidth=200, imgMaxWidth= 200, imgMaxHeight= 200}){\n    this.uploadPanel = uploadPanel;\n    this.projectId = projectId;\n    this.domain = domain;\n\n    this.imgElement = imgElement || uploadPanel.querySelector('.img')\n    if (this.imgElement == null){\n      this.imgElement = document.createElement(\"img\")\n      this.imgElement.className = 'img'\n      this.imgElement.style.cssText = `max-width: ${imgMaxWidth}px;max-height: ${imgMaxHeight};display:none`\n\n      this.uploadPanel.appendChild(this.imgElement)\n    }\n\n    this.qrImgElement = qrImgElement || uploadPanel.querySelector('.qrcodeImg')\n    if (this.qrImgElement == null){\n      this.qrImgElement = document.createElement(\"img\")\n      this.qrImgElement.className = 'qrcodeImg'\n      this.qrImgElement.style.cssText = `width: ${qrcodeWidth}px;height: ${qrcodeWidth}px;display:none`\n      this.uploadPanel.appendChild(this.qrImgElement)\n    }\n\n  }\n  bindAllElement({qrcodeBtn, linkBtn, userId, uid, fetchSecretPromise = null, mainAttribute = null, secondAttribute = null, updateFunction = (url)=> {console.log(`img updated: ${url}`)}}){\n    let promise = fetchSecretPromise\n    if(promise == null){\n      promise = Promise.resolve(null)\n    }\n    promise.then(secret => {\n      if(qrcodeBtn){\n        qrcodeBtn.onclick = (e) => {\n          e.preventDefault();\n          ElementDisplay(this.qrImgElement, true)\n          this.qrImgElement.src = buildQrUrl(this.projectId, userId, uid, mainAttribute, secondAttribute,secret, this.domain)\n          this.bindImgLoad({ userId, uid, updateFunction})\n        }\n      }\n\n      if(linkBtn){\n        linkBtn.onclick = (e) => {\n          ElementDisplay(this.qrImgElement, false)\n          this.bindImgLoad({userId, uid, updateFunction})\n          let pageUrl = buildUploadPageUrl(this.projectId, userId, uid, mainAttribute,secondAttribute, secret, this.domain)\n          window.open(pageUrl)\n        }\n      }\n    });\n\n\n  }\n\n\n  bindImgLoad({ userId, uid, updateFunction}){\n    let imageUrl = buildImageUrl(this.projectId, userId, uid, this.domain)\n    bindImg(this.imgElement, imageUrl, (url) => {\n      ElementDisplay(this.qrImgElement, false)\n      updateFunction(url)\n    })\n  }\n\n  uploadByBrowser({userId = -1, uid, secret = null, mainAttribute = null, secondAttribute = null, updateFunction}){\n    ElementDisplay(this.qrImgElement, false)\n    this.bindImgLoad({userId, uid, updateFunction})\n    let pageUrl = buildUploadPageUrl(this.projectId, userId, uid, mainAttribute,secondAttribute, secret, this.domain)\n    window.open(pageUrl)\n  }\n\n  uploadByQrScan({userId = -1, uid, secret = null, mainAttribute = null, secondAttribute = null, updateFunction}){\n    ElementDisplay(this.qrImgElement, true)\n    this.qrImgElement.src = buildQrUrl(this.projectId, userId, uid, mainAttribute, secondAttribute,secret, this.domain)\n    this.bindImgLoad({ userId, uid, updateFunction})\n  }\n}\n\nexport default UploadHelper","import UploadHelper from './UploadHelper'\n\nlet upload_check_t\nconst buildUploadPageUrl = (projectId, userId, uploadUid, mainAttribute = null, secondAttribute = null, secret = null, uploadDomain = 'https://uploadhelper.ce04.com') => {\n\n  var url =  `${uploadDomain}/projects/${projectId}/standard_images/new?client_user_uid=${userId}&upload_uid=${uploadUid}&main_attribute=${mainAttribute}&second_attribute=${secondAttribute}`\n  if (secret){\n    url = `${url}&secret=${secret}`\n  }\n  return url\n}\n\nconst buildImageUrl = (projectId, userId, uploadUid, uploadDomain = 'https://uploadhelper.ce04.com') => {\n  return `${uploadDomain}/fetch_image?project_id=${projectId}&client_user_id=${userId}&upload_uid=${uploadUid}`\n}\n\nconst buildQrUrl = (projectId, userId, uploadUid, mainAttribute = null, secondAttribute = null, secret = null, uploadDomain = 'https://uploadhelper.ce04.com') => {\n  return `${uploadDomain}/welcome/qrcode?url=${encodeURIComponent(buildUploadPageUrl(projectId, userId, uploadUid, mainAttribute, secondAttribute, secret, uploadDomain))}`\n}\n\nconst fetchImageUrlInfo = (projectId, userId, uploadUid, uploadDomain = 'https://uploadhelper.ce04.com') => {\n  return new Promise(function (resolve, reject) {\n    fetch(`${uploadDomain}/projects/${projectId}/standard_images/fetch_status`,\n      {\n        method: \"POST\",\n        type: \"cors\",\n        headers: { 'user-agent': 'check v1', 'content-type': 'application/json' },\n        body: JSON.stringify({\n          client_user_id: userId,\n          upload_uid: uploadUid,\n        })\n      }\n    ).then((res) => {\n      if (res.status != 200) {\n        clearTimeout(upload_check_t)\n        upload_check_t = setTimeout(() => {\n          console.log(upload_check_t)\n          fetchImageUrlInfo(projectId, userId, uploadUid, uploadDomain).then((x) => { resolve(x) })\n        }, 5000)\n      } else {\n        res.json().then((a) => {\n          return resolve(a)\n        })\n      }\n    })\n  })\n}\n\nexport { UploadHelper, fetchImageUrlInfo, buildImageUrl, buildQrUrl, buildUploadPageUrl }","import React, { useState, useRef, useEffect } from 'react';\nimport { UploadHelper } from 'upload2express'\n\nexport default ({ projectId,\n                  children,\n                  domain = 'https://uploadhelper.ce04.com',\n                  userId= 'default',\n                  uid=null,\n                  showLink = true,\n                  panelClass = null,\n                  directLinkClass = null,\n                  defaultUploadedUrl = null,\n                  showDirectLink = true,\n                  qrCodeLinkClass = null,\n                  showQrCodeLink = true,\n                  RenderDom = null,\n                  showUploadedImg = true,\n\n                  uploadedImgStyle = {},\n                  buildUidFunc = () => {return new Date().getTime()},\n                  updatedFunc = (url) => {}  }) => {\n\n  const uploadPanel = useRef(null)\n  const imagePanel = useRef(null)\n  const [uploadedUrl, setUploadUrl] = useState(defaultUploadedUrl)\n  const [visibleUploadedLink, setVisibleUploadedLink] = useState(false)\n  let uploadHelper = null\n\n\n  const getUid = () => {\n    if (uid) {\n      return uid\n    }else{\n      return buildUidFunc()\n    }\n  }\n\n  useEffect(() => {\n    uploadHelper = new UploadHelper({\n      uploadPanel: uploadPanel.current,\n      projectId: projectId,\n      qrcodeWidth: 160,\n      domain: domain\n    })\n  }, [])\n\n  const qrcode = (e) => {\n    e.preventDefault()\n    uploadHelper.uploadByQrScan(\n      {\n        userId: userId,\n        uid: getUid(),\n        updateFunction: (url) => {\n          updatedFunc(url)\n          setUploadUrl(url)\n          setVisibleUploadedLink(true)\n        }\n      }\n    )\n  }\n\n  const click = (e) => {\n    e.preventDefault()\n    uploadHelper.uploadByBrowser(\n      {\n        userId: userId,\n        uid: getUid(),\n        updateFunction: (url) => {\n          updatedFunc(url)\n          setUploadUrl(url)\n          setVisibleUploadedLink(true)\n        }\n      }\n    )\n  }\n\n  return (\n    <div>\n      <div ref={uploadPanel}>\n        <div className={`${panelClass} upload-panel-buttons`}>\n\n          {showDirectLink ? (<a href=\"#\" className={`${directLinkClass} direct-upload-link`} onClick={click}>上传图片</a>) : null}\n          {showQrCodeLink ? (<a href='#' className={`${qrCodeLinkClass} qr-upload-link `} onClick={qrcode}>通过手机上传图片</a>) : null}\n        </div>\n\n        <img ref={imagePanel} className='img' style={{...{ objectFit: \"contain\", maxidth: 200,maxHeight: 200, display: visibleUploadedLink || !showUploadedImg ?  \"\" : 'hidden'}, uploadedImgStyle}}></img>\n      </div>\n      {showLink && visibleUploadedLink ? (<a href={uploadedUrl}>{uploadedUrl}</a>) : null}\n      {RenderDom && uploadedUrl ? (<RenderDom url={uploadedUrl} />) : null}\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport  SimpleComponent  from 'react-upload-2-express'\n\nconst RenderDom = ({url}) => (\n  <>\n  <input type='hidden' value={url} name='user[profile_image_url]' />\n  </>\n)\n\nexport default ({}) => {\n  return(\n    <>\n      {/* <UploadElement projectId='project_avatar' domain={domain} showLink={false} RenderDom={RenderDom} /> */}\n\n      <SimpleComponent projectId='user_avatar'\n\n      showLink={true}\n      RenderDom={RenderDom}\n       />\n    </>\n  )\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}